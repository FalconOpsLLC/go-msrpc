<div class="content"><p> </p><p>The IWbemServices::CreateClassEnumAsync method provides an
asynchronous class enumeration. When this method is invoked, the server MUST
return all classes that satisfy the selection criteria. </p><dl>
<dd>
<div><pre> HRESULT CreateClassEnumAsync(
   [in] const BSTR strSuperclass,
   [in] long lFlags,
   [in] IWbemContext* pCtx,
   [in] IWbemObjectSink* pResponseHandler
 );
</pre></div>
</dd></dl><p><b>strSuperClass: </b>Specifies a <span><a href="6837a7cb-ba2d-46b1-802c-fce2fd5a6ad6#gt_fbb1e623-a709-400d-8d4a-85df94ad58c3" data-linktype="relative-path">superclass</a></span>
name. Only classes that are subclasses of this class MUST be returned. If <i>strSuperClass</i>
is NULL or a zero-length string, all classes in the namespace MUST be
considered in the result set. The results MUST be filtered by using the <i>lFlags</i>
parameter. Classes without a base class are considered to be derived from the
NULL superclass.</p><p><b>lFlags: </b>Flags that affect the behavior of the <span><a href="b05b1315-0d1f-46a6-8541-df2f72207a96" data-linktype="relative-path">CreateClassEnum</a></span>
method. Flag behavior MUST be interpreted as specified in the following table.</p><dl>
<dd>
<p>The server MUST allow any combination of zero or
more flags from the following table and MUST comply with all the restrictions
in a flag description. Any other DWORD value that does not match a flag
condition MUST be treated as not valid.</p>
</dd>
<dd>
<table><thead>
  <tr>
   <th>
   <p>Value</p>
   </th>
   <th>
   <p>Meaning</p>
   </th>
  </tr>
 </thead><tbody><tr>
  <td>
  <p>WBEM_FLAG_USE_AMENDED_QUALIFIERS</p>
  <p>0x00020000</p>
  </td>
  <td>
  <p>If this bit is not set, the server SHOULD return no <span><a href="6837a7cb-ba2d-46b1-802c-fce2fd5a6ad6#gt_f82a4363-0099-479c-b42c-a8d398a90443" data-linktype="relative-path">CIM
  localizable information</a></span>. </p>
  <p>If this bit is set, the server SHOULD return CIM
  localizable information for the <span><a href="6837a7cb-ba2d-46b1-802c-fce2fd5a6ad6#gt_c1fdd6c7-06cb-4787-8735-4d19a68dd802" data-linktype="relative-path">CIM object</a></span> as
  specified in section <span><a href="2bbdf995-93d8-4902-a39d-38f2a9790b85" data-linktype="relative-path">2.2.6</a></span>.</p>
  </td>
 </tr><tr>
  <td>
  <p>WBEM_FLAG_SEND_STATUS</p>
  <p>0x00000080</p>
  </td>
  <td>
  <p>If this bit is not set, the server MUST make one final
  <span><a href="479c78dc-73cf-4f5b-85bd-5efb26ab48a6" data-linktype="relative-path">IWbemObjectSink::SetStatus</a></span>
  call on the <span><a href="6837a7cb-ba2d-46b1-802c-fce2fd5a6ad6#gt_e5ba77ec-1a10-4a4e-a980-c81942237b34" data-linktype="relative-path">interface pointer</a></span>
  that is provided in the <i>pResponseHandler</i> parameter.</p>
  <p>If this bit is set, the server MAY make intermediate
  IWbemObjectSink::SetStatus calls on the interface pointer prior to call completion.</p>
  </td>
 </tr><tr>
  <td>
  <p>WBEM_FLAG_SHALLOW</p>
  <p>0x00000001</p>
  </td>
  <td>
  <p>When this bit is not set, the server MUST return all
  classes that are derived from the requested class and all its subclasses.</p>
  <p>When this bit is set, the server MUST only return the
  classes that are directly derived from the requested class.</p>
  </td>
 </tr></tbody></table>
</dd></dl><p><b>pCtx: </b>MUST be a pointer to an <span><a href="18c8f1a1-652f-43b7-9186-6098bc303a8d" data-linktype="relative-path">IWbemContext</a></span>
interface, which MUST contain additional information that the client wants to
pass to the server. If <i>pCtx</i> is NULL, the parameter MUST be ignored.</p><p><b>pResponseHandler: </b>MUST be a pointer to the <span><a href="0ddb4f22-371a-4697-af5b-d4184b179b68" data-linktype="relative-path">IWbemObjectSink</a></span>
that is implemented by the caller, where enumeration results are delivered. The
parameter MUST NOT be NULL. In error cases, indicated by the return value, the
supplied IWbemObjectSink interface pointer MUST NOT be used. If WBEM_S_NO_ERROR
is returned, the user IWbemObjectSink interface pointer MUST be called to
indicate the results of the CreateClassEnumAsync operation, as specified later
in this section.</p><p><b>Return Values: </b>This method MUST return an
HRESULT, which MUST indicate the status of the method call. The HRESULT MUST
have the type and values as specified in section <span><a href="a2899649-a5a3-4b13-9ffa-d8394dcdac63" data-linktype="relative-path">2.2.11</a></span>. The server
MUST return WBEM_S_NO_ERROR (specified in section 2.2.11) to indicate the
successful completion of the method.</p><dl>
<dd>
<p><b>WBEM_S_NO_ERROR</b> (0x00)</p>
</dd></dl><p>The following validation occurs before the asynchronous
operation starts:</p><p>The <span><a href="6837a7cb-ba2d-46b1-802c-fce2fd5a6ad6#gt_f3ef2572-95cf-4c5c-b3c9-551fd648f409" data-linktype="relative-path">security principal</a></span>
that makes the call MUST have WBEM_REMOTE_ENABLE and WBEM_ENABLE accesses to
the namespace; otherwise, WBEM_E_ACCESS_DENIED MUST be returned.</p><p>The server SHOULD enforce a maximum length for the <i>strSuperClass</i>
parameter and return WBEM_E_QUOTA_VIOLATION if the limit is exceeded.<a id="Appendix_A_Target_41"></a><a aria-label="Product behavior note 41" href="27182640-aa3f-43b6-941f-a77d25f798e8#Appendix_A_41" data-linktype="relative-path">&lt;41&gt;</a></p><p>Requirements mentioned in the parameter definitions are also
checked before starting the asynchronous operation.</p><p>If successful, the server MUST create a new entry in <b>AsyncOperationTable</b>
as specified in section <span><a href="83a955c3-2fba-4d06-bd88-76ed9bbada43" data-linktype="relative-path">3.1.1.1.3</a></span>.</p><p>The following validation occurs asynchronously:</p><p>If <i>strSuperClass</i> is dynamic, the server MUST obtain <b>SupportsEnumerate</b>
for the given provider in the <b>ProviderTable</b>. If <b>SupportsEnumerate</b>
is FALSE, the server MUST return WBEM_E_PROVIDER_NOT_CAPABLE.</p><p>In response to the IWbemServices::CreateClassEnumAsync
method, the server MUST evaluate the <i>strSuperClass</i> parameter (specified
in this section) and MUST return all classes that match the input parameters
from the current namespace. The method MUST fail if <i>strSuperClass</i> does
not exist, if the method parameters or their combinations are not valid as
specified earlier in this section, or if the server is unable to execute the
method.</p></div>