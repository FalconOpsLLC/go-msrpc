<div class="content"><p> </p><p>The RRPC_FWSetGlobalConfig method modifies the value of a
global policy configuration option. The client specifies to the server in what
store this value MUST be written and what specific configuration option it is
interested in modifying.</p><dl>
<dd>
<div><pre> unsigned long RRPC_FWSetGlobalConfig(
   [in] FW_CONN_HANDLE rpcConnHandle,
   [in] unsigned short BinaryVersion,
   [in] FW_STORE_TYPE StoreType,
   [in, range(FW_GLOBAL_CONFIG_INVALID+1, FW_GLOBAL_CONFIG_MAX-1)] 
     FW_GLOBAL_CONFIG configID,
   [in, unique, size_is(dwBufSize)] 
     unsigned char* lpBuffer,
   [in, range(0, 10*1024)] unsigned long dwBufSize
 );
</pre></div>
</dd></dl><p><b>rpcConnHandle: </b>This parameter is an <span><a href="d891304d-92d8-4f9f-9e60-a1f02b28ae30#gt_8a7f6700-8311-45bc-af10-82e10accd331" data-linktype="relative-path">RPC</a></span>
binding handle that connects to the RPC interface of the Firewall and Advanced
Security Protocol.</p><p><b>BinaryVersion: </b>This parameter specifies the
RPC interface binary version. This implies versions of the methods and versions
of the structures.</p><p><b>StoreType: </b>This parameter specifies the policy
store in which the client wants to modify this configuration option.</p><p><b>configID: </b>This parameter specifies the
specific global policy configuration option the client wants to modify.</p><p><b>lpBuffer: </b>This is an input parameter. This
parameter is a pointer to the buffer that the client provides containing the
value to write on the configuration option specified. If the buffer is NULL,
this method deletes the configuration option.</p><p><b>dwBufSize: </b>This parameter is the size of the
buffer to which the <i>lpBuffer</i> parameter points.</p><p><b>Return Values: </b>The method returns 0 if
successful; if failed, it returns a nonzero error code. The field can take any
specific error code value, as specified in <span><a href="../ms-erref/1bc92ddf-b79e-413c-bbaa-99a5281a6c90" data-linktype="relative-path">[MS-ERREF]</a></span>.
The following return values are common. </p><dl>
<dd>
<table><thead>
  <tr>
   <th>
   <p>Return value/code</p>
   </th>
   <th>
   <p>Description</p>
   </th>
  </tr>
 </thead><tbody><tr>
  <td>
  <p>0x00000005</p>
  <p>ERROR_ACCESS_DENIED</p>
  </td>
  <td>
  <p>The client does not have the required credentials to
  call the method.</p>
  </td>
 </tr><tr>
  <td>
  <p>0x00000032</p>
  <p>ERROR_NOT_SUPPORTED</p>
  </td>
  <td>
  <p>The store type specified does not support this method.</p>
  </td>
 </tr><tr>
  <td>
  <p>0x00000057</p>
  <p>ERROR_INVALID_PARAMETER</p>
  </td>
  <td>
  <p>One of the parameters of this method is incorrect, or
  is required and not specified. This error can be returned because:</p>
  <ul><li><p><span><span>  
  </span></span><span>The specific configuration option
  is not meant to be available in the specified store.</span></p>
  </li><li><p><span><span>  
  </span></span><span>The specified configuration
  option is not defined.</span></p>
  </li><li><p><span><span>  
  </span></span><span>One of the required values is not
  specified.</span></p>
  </li><li><p><span><span>  
  </span></span><span>The buffer is null but <i>dwBufSize</i>
  says otherwise.</span></p>
  </li><li><p><span><span>  
  </span></span><span>The buffer size is not enough to
  hold the specific value.</span></p>
  </li></ul></td>
 </tr></tbody></table>
</dd></dl><p><b>Exceptions Thrown:</b> No exceptions are thrown
beyond those thrown by the underlying RPC protocol, as specified in <span><a href="../ms-rpce/290c38b1-92fe-4229-91e6-4fc376610c15" data-linktype="relative-path">[MS-RPCE]</a></span>.
If any lower-layer errors are reported by RPC exception, this exception is
converted to an error code and reported to higher-layer protocols via the
return value.</p><p>This method performs a merge operation of the resultant
configuration values, as defined in section <span><a href="e8924ac5-aa4a-41d1-bf65-4f46b3d399aa" data-linktype="relative-path">3.1.3</a></span>. It then
determines what modifications are necessary on the rule objects to make sure
the policy is enforced.</p><p>The server MUST validate that the client is authorized to
perform the requested operation (as defined in section <span><a href="b0c93352-8371-4d63-abca-b0cc8dbcc3d7" data-linktype="relative-path">3.1.4</a></span>)
before executing this method.</p></div>