<div class="content"><p> </p><p>The RRPC_FWQueryFirewallRules2_24 method requests the server
to return all the firewall rules that match the specified query object that are
contained in the store that is referenced by the <i>hPolicyStore</i> handle.
The method returns a linked list of all the connection security rule objects.
The method is only supported for binary version 0x0218.</p><dl>
<dd>
<div><pre> DWORD RRPC_FWQueryFirewallRules2_24(
   [in] FW_CONN_HANDLE rpcConnHandle,
   [in] FW_POLICY_STORE_HANDLE hPolicyStore,
   [in] PFW_QUERY pQuery,
   [in] WORD wFlags,
   [out, ref] DWORD* pdwNumRules,
   [out] PFW_RULE2_24* ppRules
 );
</pre></div>
</dd></dl><p><b>rpcConnHandle: </b>An <span><a href="d891304d-92d8-4f9f-9e60-a1f02b28ae30#gt_8a7f6700-8311-45bc-af10-82e10accd331" data-linktype="relative-path">RPC</a></span> binding handle
that connects to the RPC interface of the Firewall and Advanced Security
Protocol.</p><p><b>hPolicyStore: </b>An input parameter that is an <b>FW_POLICY_STORE_HANDLE</b>
data type. The data type MUST contain an opened policy store handle,
successfully opened with the RRPC_FWOpenPolicyStore (Opnum 0) method (section <span><a href="2157e39a-1bf0-4e0c-abae-0811fd918b11" data-linktype="relative-path">3.1.4.1</a></span>).
The handle MUST be of the <b>FW_STORE_TYPE_DYNAMIC</b> store.</p><p><b>pQuery: </b>Represents the query object that the
client uses to specify which main mode rules MUST be retrieved from the store.
The query object MUST be valid, as specified in the definition of the <b>FW_QUERY</b>
data type.</p><p><b>wFlags: </b>A combination of flags from the <b>FW_ENUM_RULES_FLAGS</b>
enumeration, which modifies the behavior of the method and performs operations
on the rules before returning them in the linked list.</p><p><b>pdwNumRules: </b>An output parameter that, on success,
MUST be equal to the number of rules returned.</p><p><b>ppRules: </b>An output parameter that, on success,
contains a linked list of <b>FW_RULE2_24</b>_data types.</p><p><b>Return Values: </b>The method returns 0 if
successful; if it fails, it returns a nonzero error code. The field can take
any specific error code value, as specified in <span><a href="../ms-erref/1bc92ddf-b79e-413c-bbaa-99a5281a6c90" data-linktype="relative-path">[MS-ERREF]</a></span>.
The following return values are common.</p><dl>
<dd>
<table><thead>
  <tr>
   <th>
   <p>Return value/code</p>
   </th>
   <th>
   <p>Description</p>
   </th>
  </tr>
 </thead><tbody><tr>
  <td>
  <p>0x00000005</p>
  <p>ERROR_ACCESS_DENIED</p>
  </td>
  <td>
  <p>The client does not have the required credentials to
  call the method.</p>
  </td>
 </tr><tr>
  <td>
  <p>0x00000057</p>
  <p>ERROR_INVALID_PARAMETER</p>
  </td>
  <td>
  <p>One of the parameters of this method is incorrect or
  is required but not specified. This error can be returned in the following
  cases:</p>
  <p>- One of the required values is not specified.</p>
  <p>- The <i>pQuery</i> parameter contains invalid
  conditions.</p>
  </td>
 </tr></tbody></table>
</dd></dl><p><b>Exceptions Thrown:</b> No exceptions are thrown
beyond those thrown by the underlying RPC protocol, as specified in <span><a href="../ms-rpce/290c38b1-92fe-4229-91e6-4fc376610c15" data-linktype="relative-path">[MS-RPCE]</a></span>.
If any lower-layer errors are reported by RPC exception, this exception is
converted to an error code and reported to higher-layer protocols via the
return value.</p><p>The server MUST validate that the client is authorized to
perform the requested operation (as defined in section <span><a href="b0c93352-8371-4d63-abca-b0cc8dbcc3d7" data-linktype="relative-path">3.1.4</a></span>)
before executing this method.</p></div>