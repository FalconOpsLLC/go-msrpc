<div class="content"><p>The SetUpConference packet is transmitted from a TAPI <a href="489de77f-16d8-4c4f-939a-f795e8b42893#gt_60e0e1fa-66fe-41e1-b5e3-ceab97e53506" data-linktype="relative-path">client</a> to a TAPI <a href="489de77f-16d8-4c4f-939a-f795e8b42893#gt_434b0234-e970-4e8c-bdfa-e16a30d96703" data-linktype="relative-path">server</a> in a <a href="489de77f-16d8-4c4f-939a-f795e8b42893#gt_8a7f6700-8311-45bc-af10-82e10accd331" data-linktype="relative-path">remote procedure call</a>.
Sending this packet MUST set up a conference call for the addition of the third
party.</p><table>
 <tbody><tr>
  <th><p><br/>0</p></th>
  <th><p><br/>1</p></th>
  <th><p><br/>2</p></th>
  <th><p><br/>3</p></th>
  <th><p><br/>4</p></th>
  <th><p><br/>5</p></th>
  <th><p><br/>6</p></th>
  <th><p><br/>7</p></th>
  <th><p><br/>8</p></th>
  <th><p><br/>9</p></th>
  <th><p>1<br/>0</p></th>
  <th><p><br/>1</p></th>
  <th><p><br/>2</p></th>
  <th><p><br/>3</p></th>
  <th><p><br/>4</p></th>
  <th><p><br/>5</p></th>
  <th><p><br/>6</p></th>
  <th><p><br/>7</p></th>
  <th><p><br/>8</p></th>
  <th><p><br/>9</p></th>
  <th><p>2<br/>0</p></th>
  <th><p><br/>1</p></th>
  <th><p><br/>2</p></th>
  <th><p><br/>3</p></th>
  <th><p><br/>4</p></th>
  <th><p><br/>5</p></th>
  <th><p><br/>6</p></th>
  <th><p><br/>7</p></th>
  <th><p><br/>8</p></th>
  <th><p><br/>9</p></th>
  <th><p>3<br/>0</p></th>
  <th><p><br/>1</p></th>
 </tr>
 <tr>
  <td colspan="32">
  <p align="center">Req_Func</p>
  </td>
 </tr>
 <tr>
  <td colspan="32">
  <p align="center">Reserved1</p>
  </td>
 </tr>
 <tr>
  <td colspan="32">
  <p align="center">dwRequestID</p>
  </td>
 </tr>
 <tr>
  <td colspan="32">
  <p align="center">lpContext</p>
  </td>
 </tr>
 <tr>
  <td colspan="32">
  <p align="center">hCall</p>
  </td>
 </tr>
 <tr>
  <td colspan="32">
  <p align="center">hLine</p>
  </td>
 </tr>
 <tr>
  <td colspan="32">
  <p align="center">lphConfCallContext</p>
  </td>
 </tr>
 <tr>
  <td colspan="32">
  <p align="center">lphConsultCallContext</p>
  </td>
 </tr>
 <tr>
  <td colspan="32">
  <p align="center">dwNumParties</p>
  </td>
 </tr>
 <tr>
  <td colspan="32">
  <p align="center">lpCallParams</p>
  </td>
 </tr>
 <tr>
  <td colspan="32">
  <p align="center">dwAsciiCallParamsCodePage</p>
  </td>
 </tr>
 <tr>
  <td colspan="32">
  <p align="center">Reserved2</p>
  </td>
 </tr>
 <tr>
  <td colspan="32">
  <p align="center">Reserved3</p>
  </td>
 </tr>
 <tr>
  <td colspan="32">
  <p align="center">Reserved4</p>
  </td>
 </tr>
 <tr>
  <td colspan="32">
  <p align="center">Reserved5</p>
  </td>
 </tr>
 <tr>
  <td colspan="32">
  <p align="center">VarData
  (variable)</p>
  </td>
 </tr>
 <tr>
  <td colspan="32">
  <p align="center">...</p>
  </td>
 </tr>
</tbody></table><p><b>Req_Func (4 bytes): </b>An unsigned 32-bit
integer. The identifier of the function that will be invoked on the remote
server. This value MUST be set to 84. </p><dl>
<dd>
<p><b>Return Values</b></p>
</dd>
<dd>
<p>On completion of <a href="c28c36d0-579b-4e20-a100-f4e71012d5f8" data-linktype="relative-path">ClientRequest</a>, this field
MUST contain the result of the encapsulated telephony request. A nonzero
request ID value indicates that the request is in progress and will complete
asynchronously, and a <a href="e0e8af90-24f1-4dbc-8d4e-01b8e4e7cb53" data-linktype="relative-path">LINEERR_Constants</a>
value indicates synchronous failure.</p>
</dd>
<dd>
<p>Returns a positive request identifier if the
function will be completed asynchronously or a negative error number if an
error occurs. The dwParam2 parameter of the corresponding <a href="8f5bc349-fd55-46f2-b0bc-dc9f757317a9" data-linktype="relative-path">LINE_REPLY</a> packet is zero
if the function succeeds, or it is a negative error number if an error occurs.
If the client specified a nonzero value in the dwRequestID field of the packet,
the same value MUST be used for the returned positive request identifier.
Common return values are:</p>
</dd>
<dd>
<table><thead>
  <tr>
   <th>
   <p>Name</p>
   </th>
   <th>
   <p>Value</p>
   </th>
  </tr>
 </thead><tbody><tr>
  <td>
  <p>LINEERR_BEARERMODEUNAVAIL</p>
  </td>
  <td>
  <p>0x80000003</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_UNINITIALIZED</p>
  </td>
  <td>
  <p>0x80000050</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_CALLUNAVAIL</p>
  </td>
  <td>
  <p>0x80000005</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_INVALMEDIAMODE</p>
  </td>
  <td>
  <p>0x8000002F</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_CONFERENCEFULL</p>
  </td>
  <td>
  <p>0x80000007</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_INVALPOINTER</p>
  </td>
  <td>
  <p>0x80000035</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_INUSE</p>
  </td>
  <td>
  <p>0x8000000F</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_INVALRATE</p>
  </td>
  <td>
  <p>0x80000037</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_INVALADDRESSMODE</p>
  </td>
  <td>
  <p>0x80000012</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_NOMEM</p>
  </td>
  <td>
  <p>0x80000044</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_INVALBEARERMODE</p>
  </td>
  <td>
  <p>0x80000016</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_NOTOWNER</p>
  </td>
  <td>
  <p>0x80000046</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_INVALCALLHANDLE</p>
  </td>
  <td>
  <p>0x80000018</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_OPERATIONUNAVAIL</p>
  </td>
  <td>
  <p>0x80000049</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_INVALCALLSTATE</p>
  </td>
  <td>
  <p>0x8000001C</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_OPERATIONFAILED</p>
  </td>
  <td>
  <p>0x80000048</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_INVALCALLPARAMS</p>
  </td>
  <td>
  <p>0x80000019</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_RATEUNAVAIL</p>
  </td>
  <td>
  <p>0x8000004A</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_INVALLINEHANDLE</p>
  </td>
  <td>
  <p>0x8000002B</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_RESOURCEUNAVAIL</p>
  </td>
  <td>
  <p>0x8000004B</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_INVALLINESTATE</p>
  </td>
  <td>
  <p>0x8000002C</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_STRUCTURETOOSMALL</p>
  </td>
  <td>
  <p>0x8000004D</p>
  </td>
 </tr><tr>
  <td>
  <p>LINEERR_USERUSERINFOTOOBIG</p>
  </td>
  <td>
  <p>0x80000051</p>
  </td>
 </tr></tbody></table>
</dd></dl><p><b>Reserved1 (4 bytes): </b>An unsigned 32-bit
integer. MUST be set to zero when sent and MUST be ignored on receipt. </p><p><b>dwRequestID (4 bytes): </b>The identifier of the
asynchronous request. </p><dl>
<dd>
<table><thead>
  <tr>
   <th>
   <p>Value</p>
   </th>
   <th>
   <p>Meaning</p>
   </th>
  </tr>
 </thead><tbody><tr>
  <td>
  <p>0x00000000</p>
  </td>
  <td>
  <p>An unsigned 32-bit integer. The server MUST generate a
  unique positive request ID to return as the Ack_ReturnValue.</p>
  </td>
 </tr><tr>
  <td>
  <p>0x00000001 â€” 0x7FFFFFFF</p>
  </td>
  <td>
  <p>The server MUST use this value instead of generating a
  unique positive request ID.</p>
  </td>
 </tr></tbody></table>
</dd></dl><p><b>lpContext (4 bytes): </b>An unsigned 32-bit
integer. The opaque, client-specified value that is used by the client upon
request completion; MUST be returned by the server in the request completion
packet. </p><p><b>hCall (4 bytes): </b>An <a href="7f4089a0-7432-4ef0-8eeb-5aafe407c07e" data-linktype="relative-path">HCALL</a>. The handle to the
Initial call that identifies the first party of a conference call. In some
environments, a call MUST exist to start a conference call, and the application
MUST be an owner of this call. In other telephony environments, where no call
initially exists, hCall MUST be left NULL, and hLine MUST be specified to
identify the line on which the conference call is to be initiated. If hCall is
not NULL, the call state of hCall must be connected. One way in which this
handle can be obtained is by sending the <a href="c9acdfde-22de-43ff-b491-23a9ed72fb31" data-linktype="relative-path">MakeCall</a> packet to the
remote server.</p><p><b>hLine (4 bytes): </b>An <a href="9a80ee5c-cf55-4a86-bd67-173059d6ff3c" data-linktype="relative-path">HLINE</a>. The handle to the
line. This handle MUST be used to identify the line device on which to
originate the conference call if hCall is NULL. The hLine parameter is ignored
if hCall is not NULL. This field MUST have been obtained by sending the <a href="2759c744-e040-4c5d-b4b5-215d391f0490" data-linktype="relative-path">Open</a> packet.</p><p><b>lphConfCallContext (4 bytes): </b>An unsigned
32-bit integer. The opaque, client-specified value that is used by the client
upon request completion; MUST be returned by the server in the request
completion packet. </p><p><b>lphConsultCallContext (4 bytes): </b>An unsigned
32-bit integer. The opaque, client-specified value that is used by the client
upon request completion; MUST be returned by the server in the request completion
packet. </p><p><b>dwNumParties (4 bytes): </b>An unsigned 32-bit
integer. The expected number of parties in the conference call. This number
MUST be passed to the service provider. The service provider is free to do as
it pleases with this number: ignore it, use it as a hint to allocate the
correct size of the conference bridge inside the switch, and so on.</p><p><b>lpCallParams (4 bytes): </b>An unsigned 32-bit
integer. The size, in bytes, of a <a href="c72ece07-095d-441a-93cd-660f09b7826f" data-linktype="relative-path">LINECALLPARAMS</a> packet in
the VarData field that contains call parameters to use when establishing the
consultation call. If this field is -1 (0xFFFFFFFF), it indicates that no
LINECALLPARAMS packet was specified. </p><p><b>dwAsciiCallParamsCodePage (4 bytes): </b>An
unsigned 32-bit integer. This MUST be set to TAPI_NO_DATA (0xFFFFFFFF).</p><p><b>Reserved2 (4 bytes): </b>An unsigned 32-bit
integer. This field is used for padding and MUST be ignored on receipt. It can
be any value.</p><p><b>Reserved3 (4 bytes): </b>An unsigned 32-bit
integer. This field is used for padding and MUST be ignored on receipt. It can
be any value.</p><p><b>Reserved4 (4 bytes): </b>An unsigned 32-bit
integer. This field is used for padding and MUST be ignored on receipt. It can
be any value.</p><p><b>Reserved5 (4 bytes): </b>An unsigned 32-bit
integer. This field is used for padding and MUST be ignored on receipt. It can
be any value.</p><p><b>VarData (variable): </b>MUST contain a
LINECALLPARAMS packet.</p><dl>
<dd>
<p>The contents of this field are aligned to the next
byte.</p>
</dd></dl></div>