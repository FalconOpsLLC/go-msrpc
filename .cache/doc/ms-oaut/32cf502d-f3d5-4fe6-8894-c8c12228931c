<div class="content"><p> </p><p>The SAFEARR_UNKNOWN structure specifies an array of
MInterfacePointers elements (see <span><a href="../ms-dcom/4a893f3d-bd29-48cd-9f43-d9777a4415b0" data-linktype="relative-path">[MS-DCOM]</a></span>
section <span><a href="../ms-dcom/21781a97-cb45-4655-82b0-02c4a1584603" data-linktype="relative-path">2.2.14</a></span>)
whose IPID is IID_IUnknown (see section <span><a href="58504586-e4af-44a3-be04-f1dc281b7429" data-linktype="relative-path">1.9</a></span>).</p><dl>
<dd>
<div><pre> typedef struct _wireSAFEARR_UNKNOWN {
   ULONG Size;
   [size_is(Size), ref] IUnknown** apUnknown;
 } SAFEARR_UNKNOWN;
</pre></div>
</dd></dl><p><b>Size:</b>  MUST be set to the total
number of elements in the array.</p><p><b>apUnknown:</b>  MUST be an array of
MInterfacePointer (see [MS-DCOM], section 2.2.1.10). The iid field in the <span><a href="5583e1b8-454c-4147-9f56-f72416a15bee#gt_d2b5b331-4e5f-417f-92c5-38eef54176c2" data-linktype="relative-path">OBJREF</a></span>
MUST be IID_IUnknown (see section 1.9).</p><p>The <b>Size</b> field of this type MUST be marshaled as
specified in <span><a href="https://go.microsoft.com/fwlink/?LinkId=89824" data-linktype="external">[C706]</a></span> section
14, with the exception that it MUST be marshaled by using a little-endian data
representation, regardless of the data representation format label. For more
information, see [C706] section 14.2.5.</p></div>