<div class="content"><p> </p><p>The <b>R_DhcpGetOptionValueV5</b> method retrieves the
option value for a specific option on the DHCPv4 server for a specific user
class and vendor class. If the user class or the vendor class is not specified,
the option value is retrieved from the default user class or vendor class. <i>ScopeInfo</i>
defines the scope from which the option value needs to be retrieved. The caller
of this function can free the memory pointed to by <i>OptionValue</i> by
calling the function <b>midl_user_free</b> (section <span><a href="a7e5f2d1-04b7-4363-bdc0-76a1099664eb" data-linktype="relative-path">3</a></span>).</p><dl>
<dd>
<div><pre> DWORD R_DhcpGetOptionValueV5(
   [in, unique, string] DHCP_SRV_HANDLE ServerIpAddress,
   [in] DWORD Flags,
   [in] DHCP_OPTION_ID OptionID,
   [in, string, unique] WCHAR* ClassName,
   [in, string, unique] WCHAR* VendorName,
   [in] LPDHCP_OPTION_SCOPE_INFO ScopeInfo,
   [out] LPDHCP_OPTION_VALUE* OptionValue
 );
</pre></div>
</dd></dl><p><b>ServerIpAddress: </b>The IP address/host name of
the DHCP server. This parameter is unused.</p><p><b>Flags: </b>This is of type <span><a href="../ms-dtyp/262627d8-3418-4627-9218-4ffe110850b2" data-linktype="relative-path">DWORD</a></span>,
specifying that the option value is retrieved for a specific or default vendor
class.</p><dl>
<dd>
<table><thead>
  <tr>
   <th>
   <p>Value</p>
   </th>
   <th>
   <p>Meaning</p>
   </th>
  </tr>
 </thead><tbody><tr>
  <td>
  <p>DHCP_FLAGS_OPTION_DEFAULT</p>
  <p>0x00000000</p>
  </td>
  <td>
  <p>Option value is retrieved for a default vendor class.</p>
  </td>
 </tr><tr>
  <td>
  <p>DHCP_FLAGS_OPTION_IS_VENDOR</p>
  <p>0x00000003</p>
  </td>
  <td>
  <p>If a bitwise AND operation with this bitmask yields a
  nonzero value, it indicates that the option value is retrieved for a specific
  vendor class. This validation MUST pass if a non-NULL parameter is passed in <i>VendorName</i>.</p>
  </td>
 </tr></tbody></table>
</dd></dl><p><b>OptionID: </b>This is of type <span><a href="4a0bb785-ceec-4f7a-b4a7-64555f6e0b62" data-linktype="relative-path">DHCP_OPTION_ID (section 2.2.1.2.3)</a></span>,
containing the option identifier for the option being retrieved.</p><p><b>ClassName: </b>A pointer to a null-terminated
Unicode string that contains the name of the user class to which the option
value is being retrieved. This parameter is optional. If the <i>ClassName</i>
is not specified, the option value is retrieved for the default user class. This
parameter is ignored if <b>ScopeType</b> is set to DhcpDefaultOptions in the <i>ScopeInfo</i>
parameter.</p><p><b>VendorName: </b>A pointer to a null-terminated
Unicode string that contains the name of the vendor class to which the option
value is being retrieved. This parameter is optional. If the vendor class is
not specified, the option value is retrieved for the default vendor class.</p><p><b>ScopeInfo: </b>This is a pointer to a <span><a href="177415f4-85c1-4496-a414-4938dca18b93" data-linktype="relative-path">DHCP_OPTION_SCOPE_INFO (section 2.2.1.2.41)</a></span>
structure that contains information describing the DHCPv4 scope from which this
option value is retrieved. This value defines that the option is being
retrieved from default, server, multicast scope, or scope level or for an IPv4
reservation.</p><p><b>OptionValue: </b>This is a pointer of type <span><a href="fa30c949-e063-4aea-b839-a6210e77741e" data-linktype="relative-path">LPDHCP_OPTION_VALUE</a></span>
in which the option value is retrieved corresponding to <i>OptionID</i>. For
Dynamic DNS update settings, see section <span><a href="c12007e1-f28d-43b2-9994-5c965f0e6bab" data-linktype="relative-path">3.3.1</a></span>.</p><p><b>Return Values: </b>A 32-bit unsigned integer value
that indicates return status. A return value ERROR_SUCCESS (0x00000000)
indicates that the operation was completed successfully, else it contains a
Win32 error code, as specified in <span><a href="../ms-erref/1bc92ddf-b79e-413c-bbaa-99a5281a6c90" data-linktype="relative-path">[MS-ERREF]</a></span>.
This error code value can correspond to a DHCP-specific failure, which takes a
value between 20000 and 20099, or any generic failure.</p><dl>
<dd>
<table><thead>
  <tr>
   <th>
   <p>Return value/code</p>
   </th>
   <th>
   <p>Description</p>
   </th>
  </tr>
 </thead><tbody><tr>
  <td>
  <p>0x00000000</p>
  <p>ERROR_SUCCESS</p>
  </td>
  <td>
  <p>The call was successful.</p>
  </td>
 </tr><tr>
  <td>
  <p>0x00004E25</p>
  <p>ERROR_DHCP_SUBNET_NOT_PRESENT</p>
  </td>
  <td>
  <p>The specified IPv4 subnet does not exist on the DHCP
  server.</p>
  </td>
 </tr><tr>
  <td>
  <p>0x00004E2A</p>
  <p>ERROR_DHCP_OPTION_NOT_PRESENT</p>
  </td>
  <td>
  <p>The specified option definition does not exist on the
  DHCP server database.</p>
  </td>
 </tr><tr>
  <td>
  <p>0x00004E32</p>
  <p>ERROR_DHCP_NOT_RESERVED_CLIENT</p>
  </td>
  <td>
  <p>The specified DHCP client is not a reserved client.</p>
  </td>
 </tr></tbody></table>
</dd></dl><p>The opnum field value for this method is 21.</p><p>When processing this call, the DHCP server MUST do the
following:</p><ul><li><p><span><span> 
</span></span>Validate if this method is authorized for read access per section
<span><a href="baec2112-1146-4c42-b77e-b706e170a590" data-linktype="relative-path">3.5.4</a></span>.
If not, return the error ERROR_ACCESS_DENIED.</p>
</li><li><p><span><span> 
</span></span>The <i>Flags</i> parameter MUST pass one of the validations given
in the <i>Flags</i> field description. Otherwise, the method returns
ERROR_INVALID_PARAMETER.</p>
</li><li><p><span><span> 
</span></span>If the <i>ScopeInfo</i> contains DhcpDefaultOptions, iterate
through the server ADM element <b>DHCPv4OptionDefList</b> and retrieve the <b>DHCPv4OptionDef.DHCPv4ClassedOptDefList</b>
corresponding to the default user class and vendor class specified by <i>VendorName</i>.
If <i>VendorName</i> is NULL, it refers to the default vendor class, as
specified in section <span><a href="4aa40625-0f9f-4e89-93a4-e4455bc1cc95" data-linktype="relative-path">3.1.1.9</a></span>. If there
is no <b>DHCPv4OptionDef.DHCPv4ClassedOptDefList</b> entry corresponding to
this set of user and vendor classes, return ERROR_DHCP_OPTION_NOT_PRESENT;
else, iterate through the <b>DHCPv4ClassedOptDefList</b> and if there is no <b>DHCPv4ClassedOptDef</b>
entry corresponding to <i>OptionID</i>, return ERROR_DHCP_OPTION_NOT_PRESENT;
otherwise, copy the information in <b>DHCPv4ClassedOptDef</b> in the <i>OptionValue</i>
structure and return ERROR_SUCCESS to the caller.</p>
</li><li><p><span><span> 
</span></span>If <i>ScopeInfo</i> contains DhcpGlobalOptions, iterate through
the server ADM element <b>DHCPv4ServerOptValueList</b> and retrieve <b>DHCPv4OptionValue</b>
corresponding to the user and vendor class specified by <i>ClassName</i> and <i>VendorName</i>
respectively. If <i>ClassName</i> or <i>VendorName</i> is NULL, it refers to
the default user class or vendor class respectively, as specified in section
3.1.1.9. If there is no <b>DHCPv4OptionValue</b> corresponding to specified
user and vendor class, return ERROR_FILE_NOT_FOUND; else, retrieve the <b>DHCPv4ClassedOptValue</b>
entry corresponding to the <i>OptionID</i> from <b>DHCPv4OptionValue.DHCPv4ClassedOptValueList</b>.
If the <b>DHCPv4ClassedOptValue</b> entry is not found, return ERROR_FILE_NOT_FOUND;
else, copy the information in the <b>Value</b> member of <b>DHCPv4ClassedOptValue</b>
in the <i>OptionValue</i> structure and return ERROR_SUCCESS to the caller.</p>
</li><li><p><span><span> 
</span></span>If <i>ScopeInfo</i> contains DhcpSubnetOptions, retrieve the <b>DHCPv4Scope</b>
entry corresponding to <b>SubnetScopeInfo</b> member of <i>ScopeInfo</i> from
the server ADM element <b>DHCPv4ScopesList</b>. If the <b>DHCPv4Scope</b> entry
is not found, return ERROR_DHCP_SUBNET_NOT_PRESENT; else, iterate through <b>DHCPv4Scope.DHCPv4ScopeOptValuesList</b>
and retrieve <b>DHCPv4OptionValue</b> corresponding to the user and vendor
class specified by <i>ClassName</i> and <i>VendorName</i> respectively. If <i>ClassName</i>
or <i>VendorName</i> is NULL, it refers to the default user class or vendor
class respectively, as specified in section 3.1.1.9. If the <b>DHCPv4OptionValue</b>
is not found, return ERROR_FILE_NOT_FOUND, else, retrieve the <b>DHCPv4ClassedOptValue</b>
entry corresponding to the <i>OptionID</i> from <b>DHCPv4OptionValue.DHCPv4ClassedOptValueList</b>.
If the <b>DHCPv4ClassedOptValue</b> entry is not found, return
ERROR_FILE_NOT_FOUND; else, copy the information in the <b>Value</b> member of <b>DHCPv4ClassedOptValue</b>
in the <i>OptionValue</i> structure and return ERROR_SUCCESS to the caller.</p>
</li><li><p><span><span> 
</span></span>If <i>ScopeInfo</i> contains DhcpReservedOptions, retrieve the <b>DHCPv4Scope</b>
entry from the server ADM element <b>DHCPv4ScopesList</b> that contains the <b>ReservedIpAddress</b>
field of the <b>ReservedScopeInfo</b> member. Retrieve the <b>DHCPv4Reservation</b>
entry from <b>DHCPv4Scope.DHCPv4ReservationsList</b> corresponding to the <b>ReservedIpAddress</b>.
If <b>ReservedIpAddress</b> is not part of any of the <b>DHCPv4Scope</b> or if
there is no <b>DHCPv4Reservation</b> entry corresponding to <b>ReservedIpAddress</b>,
return ERROR_DHCP_NOT_RESERVED_CLIENT; else, iterate through <b>DHCPv4Reservation.DHCPv4ResvOptValuesList</b>
and retrieve <b>DHCPv4OptionValue</b> corresponding to the user and vendor
class specified by <i>ClassName</i> and <i>VendorName</i> respectively. If <i>ClassName</i>
or <i>VendorName</i> is NULL, it refers to the default user class or vendor
class respectively, as specified in section 3.1.1.9. If the <b>DHCPv4OptionValue</b>
is not found, return ERROR_FILE_NOT_FOUND, else, retrieve the <b>DHCPv4ClassedOptValue</b>
entry corresponding to <i>OptionID</i> from
DHCPv4OptionValue.DHCPv4ClassedOptValueList. If the <b>DHCPv4ClassedOptValue</b>
entry is not found, return ERROR_FILE_NOT_FOUND, else, copy the information in
the <b>Value</b> member of <b>DHCPv4ClassedOptValue</b> in the <i>OptionValue</i>
structure and return ERROR_SUCCESS to the caller.</p>
</li><li><p><span><span> 
</span></span>If <i>ScopeInfo</i> contains DhcpMScopeOptions, retrieve the <b>DHCPv4MScope</b>
entry corresponding to the <i>ScopeInfo</i> parameter from the server ADM
element <b>DHCPv4MScopesList</b>. If the <b>DHCPv4MScope</b> entry is not
found, return ERROR_DHCP_SUBNET_NOT_PRESENT; else, iterate through <b>DHCPv4MScope.DHCPv4MScopeOptValuesList</b>
and retrieve <b>DHCPv4OptionValue</b> corresponding to the user and vendor
class specified by <i>ClassName</i> and <i>VendorName</i> respectively. If <i>ClassName</i>
or <i>VendorName</i> is NULL, it refers to the default user class or vendor
class respectively, as specified in section 3.1.1.9. If the <b>DHCPv4OptionValue</b>
is not found, return ERROR_FILE_NOT_FOUND, else, retrieve the <b>DHCPv4ClassedOptValue</b>
entry corresponding to <i>OptionID</i> from <b>DHCPv4OptionValue.DHCPv4ClassedOptValueList</b>.
If the <b>DHCPv4ClassedOptValue</b> entry is not found, return
ERROR_FILE_NOT_FOUND; else, copy the information in the <b>Value</b> member of <b>DHCPv4ClassedOptValue</b>
in the <i>OptionValue</i> structure and return ERROR_SUCCESS to the caller.</p>
</li></ul><p><b>Exceptions Thrown:</b> No exceptions are thrown beyond
those thrown by the underlying RPC protocol <span><a href="../ms-rpce/290c38b1-92fe-4229-91e6-4fc376610c15" data-linktype="relative-path">[MS-RPCE]</a></span>.</p></div>